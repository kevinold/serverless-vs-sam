AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless vs Sam - sam - HH
Parameters:
  BucketName:
    Default: sls-vs-sam-dev-serverlessdeploymentbucket-1sv3s216g9uxt
    Type: String
  CodeKey:
    Default: serverless/sls-vs-sam/dev/1534403687911-2018-08-16T07:10:47.911Z/sls-vs-sam.zip
    Type: String
  SNSEmailAddress:
    Default: hehuic@gmail.com
    Type: String
Resources:
  DynamoDBTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName:
        Fn::Sub: ${AWS::StackName}-images
    Type: AWS::DynamoDB::Table
  GenerateImageFunction:
    Properties:
      CodeUri:
        Bucket:
          Ref: BucketName
        Key:
          Ref: CodeKey
      Environment:
        Variables:
          DynamoDBTableName:
            Ref: DynamoDBTable
          S3BucketName:
            Ref: S3Bucket
      Events:
        DynamoDBInsert:
          Properties:
            BatchSize: 10
            StartingPosition: TRIM_HORIZON
            Stream:
              Fn::GetAtt:
              - DynamoDBTable
              - StreamArn
          Type: DynamoDB
      Handler: src/generate-image/index.handler
      Policies:
      - Statement:
        - Action:
          - dynamodb:PutItem
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - DynamoDBTable
            - Arn
        - Action:
          - s3:PutObject
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::${S3Bucket}/*
        Version: '2012-10-17'
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  ListDynamoDBFunction:
    Properties:
      CodeUri:
        Bucket:
          Ref: BucketName
        Key: 'serverless/sls-vs-sam/dev/1534403687911-2018-08-16T07:14:47.911Z/sls-vs-sam.zip'
      Environment:
        Variables:
          DynamoDBTableName:
            Ref: DynamoDBTable
      Events:
        GetApiEndpoint:
          Properties:
            Method: GET
            Path: /items
          Type: Api
      Handler: src/list-dynamodb/index.handler
      Policies:
      - Statement:
        - Action:
          - dynamodb:Scan
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - DynamoDBTable
            - Arn
        Version: '2012-10-17'
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  PublishSNSFunction:
    Properties:
      CodeUri:
        Bucket:
          Ref: BucketName
        Key:
          Ref: CodeKey
      Environment:
        Variables:
          SNSTopicARN:
            Ref: SNSTopic
      Events:
        S3ObjectCreated:
          Properties:
            Bucket:
              Ref: S3Bucket
            Events: s3:ObjectCreated:*
          Type: S3
      Handler: src/publish-sns/index.handler
      Policies:
      - Statement:
        - Action:
          - sns:Publish
          Effect: Allow
          Resource:
            Ref: SNSTopic
        Version: '2012-10-17'
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  PutDynamoDBFunction:
    Properties:
      CodeUri:
        Bucket:
          Ref: BucketName
        Key:
          Ref: CodeKey
      Environment:
        Variables:
          DynamoDBTableName:
            Ref: DynamoDBTable
      Events:
        GetApiEndpoint:
          Properties:
            Method: PUT
            Path: /items/{id}
          Type: Api
      Handler: src/put-dynamodb/index.handler
      Policies:
      - Statement:
        - Action:
          - dynamodb:PutItem
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - DynamoDBTable
            - Arn
        Version: '2012-10-17'
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  S3Bucket:
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-images
    Type: AWS::S3::Bucket
  SNSTopic:
    Properties:
      Subscription:
      - Endpoint:
          Ref: SNSEmailAddress
        Protocol: email
    Type: AWS::SNS::Topic
Transform: AWS::Serverless-2016-10-31
